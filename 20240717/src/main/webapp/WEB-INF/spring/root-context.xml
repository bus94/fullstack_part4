<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- Spring이 시작 될 때 최초로 호출되는 xml 파일 필요한 resource나 객체(bean)를 생성 할 수 있는 공간, 
		DB설정이나 Mybatis 초기 한 번만 설정이 필요한 xml 파일을 정의하는 공간이다. DispatchServlet 클래스는 바로 
		Spring MVC 핵심 요소! 모든 HTTP 요청을 한 곳에서 처리하는 프론트 컨트롤러 역할을 한다. 요청이 들어오면 각각의 컨트롤러로 
		전달하고 컨트롤러의 응답을 적절한 뷰로 매핑한다. -->

	<!-- DB 관련된 Bean(자바객체를) 스프링 생성해서 주입할 수 있도록 정보를 설정한다. 1. JDBC 연결을 위해서 DataSource 
		클래스를 생성해서 그 안에 DB 연결 정보를 저장한다. -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="system" />
		<property name="password" value="1234" />
	</bean>

	<!-- SqlSessionFactoryBean 객체 생성해서 경로를 설정하고, SqlSession 객체를 생성할 수 있는 코드를 
		작성하면 된다. -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mapper/member-mapper.xml" />
		<property name="configLocation"
			value="classpath:config/mybatis-config.xml" />
	</bean>

	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

</beans>
